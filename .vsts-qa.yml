jobs:
- job: UWP
  pool:
    name: "Hosted VS2017"
  workspace:
    clean: all

  steps:
  - checkout: self
    clean: true
    lfs: true

  - template: build/canary-updater.yml
  - template: build/gitversion.yml

  - task: NuGetCommand@2
    inputs:
      command: restore
      solution: src\Uno.Playground.Uwp\Uno.Playground.Uwp.csproj
      selectOrConfig: select
      includeNuGetOrg: true
      verbosityRestore: Normal

  - task: NuGetCommand@2
    inputs:
      command: restore
      solution: src\Build\Build.csproj
      selectOrConfig: select
      includeNuGetOrg: true
      verbosityRestore: Normal

  - task: MSBuild@1
    inputs:
      solution: src\Build\Build.proj
      msbuildLocationMethod: version
      msbuildVersion: latest
      msbuildArchitecture: x86
      msbuildArguments: 
      clean: false
      maximumCpuCount: true
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false

  - task: MSBuild@1
    inputs:
      solution: src\Uno.Playground.Uwp\Uno.Playground.Uwp.csproj
      msbuildLocationMethod: version
      msbuildVersion: latest
      msbuildArchitecture: x86
      msbuildArguments: /p:AppxPackageDir="$(Build.ArtifactStagingDirectory)\uwp" /t:Publish "/p:Configuration=Release;Platform=x86" /p:UapAppxPackageBuildMode=StoreUpload /p:AppxBundlePlatforms="x86|x64|arm" /p:AppxBundle=Always
      clean: false
      maximumCpuCount: true
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: drop
      ArtifactType: Container

- job: MacOS_Agent
  pool:
    name: "Hosted macOS Preview"
    demands:
    - Agent.OS -equals Darwin

  workspace:
    clean: all
 
  steps:
  - checkout: self
    clean: true
    lfs: true

  - template: build/canary-updater.yml
  - template: build/gitversion.yml

  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: 4.3.0
      checkLatest: false
 
  - task: NuGetCommand@2
    inputs:
      command: restore
      solution: $(Build.SourcesDirectory)/src/Uno.Playground.iOS/Uno.Playground.iOS.csproj
      selectOrConfig: select
      includeNuGetOrg: true
      verbosityRestore: Normal
      noCache: true
 
  - task: NuGetCommand@2
    inputs:
      command: restore
      solution: $(Build.SourcesDirectory)/src/Build/Build.csproj
      selectOrConfig: select
      includeNuGetOrg: true
      verbosityRestore: Normal
      noCache: true
 
  - task: MSBuild@1
    inputs:
      solution: src/Build/build.proj
      msbuildLocationMethod: version
      msbuildVersion: latest
      msbuildArchitecture: x86
      msbuildArguments: 
      clean: false
      maximumCpuCount: true
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false
 
  - task: MSBuild@1
    inputs:
      solution: $(Build.SourcesDirectory)/src/Uno.Playground.iOS/Uno.Playground.iOS.csproj
      msbuildLocationMethod: version
      msbuildVersion: latest
      msbuildArchitecture: x86
      msbuildArguments: /p:CheckExclusions=True "/p:Configuration=Release" "/p:Platform=iPhone"
      clean: false
      maximumCpuCount: true
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false
       
  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/Uno.Playground.iOS/bin/iPhone/Release
      Contents: '**/*.ipa'
      TargetFolder: $(build.artifactstagingdirectory)/ios
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false
 
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: drop
      ArtifactType: Container

